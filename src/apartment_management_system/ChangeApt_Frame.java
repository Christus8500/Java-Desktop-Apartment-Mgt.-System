/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package apartment_management_system;

import java.awt.Color;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.border.Border;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Christus
 */
public class ChangeApt_Frame extends javax.swing.JFrame {

    /**
     * Creates new form Property_Type_Frame
     */
    public ChangeApt_Frame() {
        initComponents();
        
        
        Border bottom_border = BorderFactory.createMatteBorder(0, 0, 1, 0, Color.BLACK);
        frame_title.setBorder(bottom_border);
        
        fillApartmentChanged();
        fillTenantApplication();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        frame_title = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txt_tenantID = new javax.swing.JTextField();
        add_change = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txt_new_apt = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txt_apt_num = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txt_date = new com.toedter.calendar.JDateChooser();
        edit_change = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        apt_change_table = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        apply_apt_change_table = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        refresh_change_table = new javax.swing.JButton();
        refresh_apply_table = new javax.swing.JButton();
        txt_change_id = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        frame_title.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        frame_title.setText("     Change Apartment");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(507, 507, 507)
                .addComponent(frame_title, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(frame_title)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        jLabel2.setFont(new java.awt.Font("Cambria", 1, 12)); // NOI18N
        jLabel2.setText(" Tenant ID:");

        txt_tenantID.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        txt_tenantID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_tenantIDActionPerformed(evt);
            }
        });

        add_change.setFont(new java.awt.Font("Cambria", 1, 12)); // NOI18N
        add_change.setText("Add Change");
        add_change.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        add_change.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_changeActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Cambria", 1, 12)); // NOI18N
        jLabel3.setText("New Apt:");

        txt_new_apt.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        txt_new_apt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_new_aptActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Cambria", 1, 12)); // NOI18N
        jLabel5.setText("Current Apt No:");

        txt_apt_num.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        txt_apt_num.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_apt_numActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Cambria", 1, 12)); // NOI18N
        jLabel6.setText("Date:");

        txt_date.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N

        edit_change.setFont(new java.awt.Font("Cambria", 1, 12)); // NOI18N
        edit_change.setText("Edit Change");
        edit_change.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        edit_change.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edit_changeActionPerformed(evt);
            }
        });

        apt_change_table.setFont(new java.awt.Font("Cambria", 1, 11)); // NOI18N
        apt_change_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        apt_change_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                apt_change_tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(apt_change_table);

        apply_apt_change_table.setFont(new java.awt.Font("Cambria", 0, 12)); // NOI18N
        apply_apt_change_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(apply_apt_change_table);

        jLabel7.setFont(new java.awt.Font("Cambria", 1, 12)); // NOI18N
        jLabel7.setText("Apartment Changed List");

        jLabel8.setFont(new java.awt.Font("Cambria", 1, 12)); // NOI18N
        jLabel8.setText("Tenant Apartment Change Application List");

        refresh_change_table.setFont(new java.awt.Font("Cambria", 1, 12)); // NOI18N
        refresh_change_table.setText("Refresh Table");
        refresh_change_table.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        refresh_change_table.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refresh_change_tableActionPerformed(evt);
            }
        });

        refresh_apply_table.setFont(new java.awt.Font("Cambria", 1, 12)); // NOI18N
        refresh_apply_table.setText("Refresh Table");
        refresh_apply_table.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        refresh_apply_table.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refresh_apply_tableActionPerformed(evt);
            }
        });

        txt_change_id.setFont(new java.awt.Font("Cambria", 0, 12)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Cambria", 1, 12)); // NOI18N
        jLabel1.setText("ID:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel5)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_change_id)
                            .addComponent(txt_tenantID)
                            .addComponent(txt_apt_num)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(add_change, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addComponent(edit_change, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(txt_new_apt, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(18, 18, 18)
                                .addComponent(txt_date, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel7)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(refresh_change_table, javax.swing.GroupLayout.PREFERRED_SIZE, 431, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(55, 55, 55)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2)
                    .addComponent(jLabel8)
                    .addComponent(refresh_apply_table, javax.swing.GroupLayout.PREFERRED_SIZE, 462, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_change_id, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_tenantID, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_apt_num, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_new_apt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txt_date, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(40, 40, 40)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(add_change, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(edit_change, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(refresh_apply_table, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(refresh_change_table, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    // Definetxt_tenantIDo clear text fields
    private void clearTextFields() {
        txt_change_id.setText("");
        txt_tenantID.setText("");
        txt_apt_num.setText("");
        txt_new_apt.setText("");
        txt_date.setDate(null);
    }
    
    //Method to populate the Tenant Apartment Change Application List table
    public void fillTenantApplication(){
        Apply_AptChange_Class apply = new Apply_AptChange_Class();
        ArrayList<Apply_AptChange_Class> applyList = apply.applyList();
        
        //JTable Columns
        String[] colNames = {"TenantId", "Apt Num.", "New Apt Num.", "Reason", "Date"};
        
        //JTable Rows
        //applyList.size() = size of the arraylist
        //5 = the number of columns
        Object[][] rows = new Object[applyList.size()][5];
        
        //add data from the list to the rows
        for(int i = 0; i < applyList.size(); i++){
            rows[i][0] = applyList.get(i).getTenant_id();
            rows[i][1] = applyList.get(i).getCurrent_apt_num();
            rows[i][2] = applyList.get(i).getNew_apt_num();
            rows[i][3] = applyList.get(i).getReason();
            rows[i][4] = applyList.get(i).getDate();
            
            DefaultTableModel model = new DefaultTableModel(rows, colNames);
            apply_apt_change_table.setModel(model);
            
        }
    }
    
    //Method to populate the Apartment Changed List table
    public void fillApartmentChanged(){
        ChangeApt_Class change = new ChangeApt_Class();
        ArrayList<ChangeApt_Class> changeList = change.changeList();
        
        //JTable Columns
        String[] colNames = {"ID", "TenantId", "Apt Num.", "Changed Apt Num.", "Date"};
        
        //JTable Rows
        //changeList.size() = size of the arraylist
        //5 = the number of columns
        Object[][] rows = new Object[changeList.size()][5];
        
        //add data from the list to the rows
        for(int i = 0; i < changeList.size(); i++){
            rows[i][0] = changeList.get(i).getApt_change_id();
            rows[i][1] = changeList.get(i).getTenant_id();
            rows[i][2] = changeList.get(i).getCurrent_apt_num();
            rows[i][3] = changeList.get(i).getNew_apt_num();
            rows[i][4] = changeList.get(i).getDate();
            
            DefaultTableModel model = new DefaultTableModel(rows, colNames);
            apt_change_table.setModel(model);
            
        }
    }
    
    
    
    private void txt_tenantIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_tenantIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_tenantIDActionPerformed

    private void add_changeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_changeActionPerformed
        // TODO add your handling code here:
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");

        // Get input values as strings
        String tenantIdText = txt_tenantID.getText();
        String currentAptNumText = txt_apt_num.getText();
        String newAptNumText = txt_new_apt.getText();
        Date selectedDate = txt_date.getDate(); // Assuming txt_date is a date picker

        if (!tenantIdText.isBlank() && !currentAptNumText.isBlank() && !newAptNumText.isBlank() && selectedDate != null) {
            // Check if input strings can be parsed as integers
            try {
                int tenantId = Integer.parseInt(tenantIdText);
                int currentAptNum = Integer.parseInt(currentAptNumText);
                int newAptNum = Integer.parseInt(newAptNumText);

                // Format the date
                String date = dateFormat.format(selectedDate);

                ChangeApt_Class change_apt = new ChangeApt_Class(0, tenantId, currentAptNum, newAptNum, date);

                if (new ChangeApt_Class().addChange(change_apt)) {
                    JOptionPane.showMessageDialog(null, "Record Created Successfully", "Change Apt", 1);
                    clearTextFields();
                } else {
                    JOptionPane.showMessageDialog(null, "Operation Failed", "Change Apt", 2);
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Tenant ID, Current Apartment Number, and New Apartment Number must be valid integers", "Invalid Input", 2);
            }
        } else {
            JOptionPane.showMessageDialog(null, "All Fields Must Not Be Empty", "Empty Field", 2);
        }
    }//GEN-LAST:event_add_changeActionPerformed

    private void txt_new_aptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_new_aptActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_new_aptActionPerformed

    private void txt_apt_numActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_apt_numActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_apt_numActionPerformed

    private void edit_changeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edit_changeActionPerformed
        // TODO add your handling code here:
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        
        int apt_change_id = Integer.valueOf(txt_change_id.getText());
        int tenantId = Integer.valueOf(txt_tenantID.getText());
        int current_aptNum = Integer.valueOf(txt_apt_num.getText());
        int new_apt_num = Integer.valueOf(txt_new_apt.getText());
        String date = dateFormat.format(txt_date.getDate());
        
        
        ChangeApt_Class change_apt = new ChangeApt_Class(apt_change_id, tenantId, current_aptNum, new_apt_num, date);
        
        if(new ChangeApt_Class().editChange(change_apt)){
            JOptionPane.showMessageDialog(null, "Lease Updated Successfully", "Update Change Apt", 1);
            clearTextFields();
        }else{
            JOptionPane.showMessageDialog(null, "Operation Failed", "Update Change Apt", 1);
        }
    }//GEN-LAST:event_edit_changeActionPerformed

    private void refresh_change_tableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refresh_change_tableActionPerformed
        // TODO add your handling code here:
        fillApartmentChanged();
    }//GEN-LAST:event_refresh_change_tableActionPerformed

    private void refresh_apply_tableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refresh_apply_tableActionPerformed
        // TODO add your handling code here:
        fillTenantApplication();
    }//GEN-LAST:event_refresh_apply_tableActionPerformed

    private void apt_change_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_apt_change_tableMouseClicked
        // TODO add your handling code here:
        //Fill The Form Field With The Selected Lease Data
        int selectedRowIndex = apt_change_table.getSelectedRow();
        txt_change_id.setText(apt_change_table.getValueAt(selectedRowIndex, 0).toString());
        txt_tenantID.setText(apt_change_table.getValueAt(selectedRowIndex, 1).toString());
        txt_apt_num.setText(apt_change_table.getValueAt(selectedRowIndex, 2).toString());
        txt_new_apt.setText(apt_change_table.getValueAt(selectedRowIndex, 3).toString());
        // Correctly set the start date and end date
        try {
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            Date change_date = dateFormat.parse(apt_change_table.getValueAt(selectedRowIndex, 4).toString());
            txt_date.setDate(change_date);
        } catch (ParseException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_apt_change_tableMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ChangeApt_Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ChangeApt_Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ChangeApt_Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChangeApt_Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ChangeApt_Frame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add_change;
    private javax.swing.JTable apply_apt_change_table;
    private javax.swing.JTable apt_change_table;
    private javax.swing.JButton edit_change;
    private javax.swing.JLabel frame_title;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton refresh_apply_table;
    private javax.swing.JButton refresh_change_table;
    private javax.swing.JTextField txt_apt_num;
    private javax.swing.JTextField txt_change_id;
    private com.toedter.calendar.JDateChooser txt_date;
    private javax.swing.JTextField txt_new_apt;
    private javax.swing.JTextField txt_tenantID;
    // End of variables declaration//GEN-END:variables
}
