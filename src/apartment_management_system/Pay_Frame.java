/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package apartment_management_system;

import java.awt.Color;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.border.Border;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Christus
 */
public class Pay_Frame extends javax.swing.JFrame {

    /**
     * Creates new form Lease_Frame
     */
    public Pay_Frame() {
        initComponents();
        
        Border bottom_border = BorderFactory.createMatteBorder(0, 0, 1, 0, Color.BLACK);
        frame_title3.setBorder(bottom_border);
        

        fillJTableWithApartmentData();
        fillJTableWithPayData();
    }
    
    // Define a method to clear text fields
    private void clearTextFields() {
        txt_payId.setText("");
        txt_apt_number.setText("");
        txt_date.setDate(null);
        txt_amount.setText("");
        
    }
    
    //Method to populate the Pay table
    public void fillJTableWithPayData(){
        Pay_Class pay = new Pay_Class();
        ArrayList<Pay_Class> payList = pay.payList();
        
        //JTable Columns
        String[] colNames = {"ID", "Date", "Amount", "Apt. No."};
        
        //JTable Rows
        //payList.size() = size of the arraylist
        //4 = the number of columns
        Object[][] rows = new Object[payList.size()][4];
        
        //add data from the list to the rows
        for(int i = 0; i < payList.size(); i++){
            rows[i][0] = payList.get(i).getPay_id();
            rows[i][1] = payList.get(i).getDate();
            rows[i][2] = payList.get(i).getAmount();
            rows[i][3] = payList.get(i).getApt_num();
            
            DefaultTableModel model = new DefaultTableModel(rows, colNames);
            pay_table.setModel(model);
             
        }
        
    }
    
    //Method to populate the Apartment table
    public void fillJTableWithApartmentData(){
        Apartment_Class apartment = new Apartment_Class();
        ArrayList<Apartment_Class> apartmentList = apartment.apartmentList();
        
        //JTable Columns
        String[] colNames = {"Apt. No.", "Apt. Type", "Rental Fee", "Building Name"};
        
        //JTable Rows
        //apartmentList.size() = size of the arraylist
        //4 = the number of columns
        Object[][] rows = new Object[apartmentList.size()][4];
        
        //add data from the list to the rows
        for(int i = 0; i < apartmentList.size(); i++){
            rows[i][0] = apartmentList.get(i).getAptNum();
            rows[i][1] = apartmentList.get(i).getAptType();
            rows[i][2] = apartmentList.get(i).getRentalFee();
            rows[i][3] = apartmentList.get(i).getBName();
            
            DefaultTableModel model = new DefaultTableModel(rows, colNames);
            apartment_table.setModel(model);
             
        }
    }
    
    //Check If The Apartment Number Exists
    private boolean checkApartmentExists(Integer apt_numb) {
        try {
            String query = "SELECT COUNT(*) FROM `apartment` WHERE `apartmentNumber` = ?";
            PreparedStatement ps = Db_Connect.Connect().prepareStatement(query);
            ps.setInt(1, apt_numb);
            ResultSet rs = ps.executeQuery();

            rs.next();
            int count = rs.getInt(1);

            return count > 0;
        } catch (SQLException e) {
            e.printStackTrace();
            // Handle the database error here
            return false;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        frame_title3 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txt_payId = new javax.swing.JTextField();
        txt_apt_number = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        txt_amount = new javax.swing.JTextField();
        add_pay = new javax.swing.JButton();
        update_pay = new javax.swing.JButton();
        refresh_pay_table = new javax.swing.JButton();
        txt_date = new com.toedter.calendar.JDateChooser();
        jScrollPane4 = new javax.swing.JScrollPane();
        apartment_table = new javax.swing.JTable();
        refresh_apt_table = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        pay_table = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        frame_title3.setFont(new java.awt.Font("Cambria", 1, 20)); // NOI18N
        frame_title3.setText("    Pay  Frame");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(499, 499, 499)
                .addComponent(frame_title3, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(frame_title3, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        jLabel9.setFont(new java.awt.Font("Cambria", 1, 12)); // NOI18N
        jLabel9.setText("ID: ");

        txt_payId.setFont(new java.awt.Font("Cambria", 0, 12)); // NOI18N
        txt_payId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_payIdActionPerformed(evt);
            }
        });

        txt_apt_number.setFont(new java.awt.Font("Cambria", 0, 12)); // NOI18N
        txt_apt_number.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_apt_numberActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Cambria", 1, 12)); // NOI18N
        jLabel11.setText("Apt Number: ");

        jLabel12.setFont(new java.awt.Font("Cambria", 1, 12)); // NOI18N
        jLabel12.setText("Date: ");

        jLabel14.setFont(new java.awt.Font("Cambria", 1, 12)); // NOI18N
        jLabel14.setText("Amount: ");

        txt_amount.setFont(new java.awt.Font("Cambria", 0, 12)); // NOI18N
        txt_amount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_amountActionPerformed(evt);
            }
        });

        add_pay.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        add_pay.setText("Add Pay");
        add_pay.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        add_pay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_payActionPerformed(evt);
            }
        });

        update_pay.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        update_pay.setText("Update Pay");
        update_pay.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        update_pay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                update_payActionPerformed(evt);
            }
        });

        refresh_pay_table.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        refresh_pay_table.setText("Refresh Table");
        refresh_pay_table.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        refresh_pay_table.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refresh_pay_tableActionPerformed(evt);
            }
        });

        txt_date.setDateFormatString("dd-MM-yyyy");
        txt_date.setFont(new java.awt.Font("Cambria", 0, 12)); // NOI18N

        apartment_table.setFont(new java.awt.Font("Cambria", 0, 12)); // NOI18N
        apartment_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        apartment_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                apartment_tableMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(apartment_table);

        refresh_apt_table.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        refresh_apt_table.setText("Refresh Table");
        refresh_apt_table.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        refresh_apt_table.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refresh_apt_tableActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        jLabel1.setText("Payment List");

        jLabel2.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        jLabel2.setText("Apartment List");

        pay_table.setFont(new java.awt.Font("Cambria", 0, 12)); // NOI18N
        pay_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        pay_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pay_tableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(pay_table);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel11)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(txt_apt_number, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addComponent(jLabel14)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txt_amount, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(44, 44, 44)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel9))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txt_payId)
                                    .addComponent(txt_date, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(add_pay, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(update_pay, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(refresh_pay_table, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 305, Short.MAX_VALUE)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 395, Short.MAX_VALUE)
                    .addComponent(refresh_apt_table, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(51, 51, 51))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(92, 92, 92)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_payId, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txt_date, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_amount, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_apt_number, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(46, 46, 46)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(add_pay, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(update_pay, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(refresh_apt_table, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(refresh_pay_table, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 38, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txt_payIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_payIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_payIdActionPerformed

    private void txt_apt_numberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_apt_numberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_apt_numberActionPerformed

    private void txt_amountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_amountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_amountActionPerformed

    private void add_payActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_payActionPerformed
        // TODO add your handling code here:
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        String date = dateFormat.format(txt_date.getDate());
        String amount = txt_amount.getText();

        int aptNum = 0;  // Initialize aptNum to 0

        try {
            aptNum = Integer.parseInt(txt_apt_number.getText());
        } catch (NumberFormatException e) {
            // Handle the case where parsing the integer fails (e.g., when the input is not a valid number)
            JOptionPane.showMessageDialog(null, "Invalid Apartment Number", "Error", 0);
        }

        if (!date.isBlank() && !amount.isBlank() && aptNum > 0) {
            // All input fields are not blank, and aptNum is valid
            Pay_Class pay = new Pay_Class(0, date, amount, aptNum);
            
            if(checkApartmentExists(aptNum)){
                if (new Pay_Class().addPay(pay)) {
                    JOptionPane.showMessageDialog(null, "Pay Added Successfully", "Add Pay", 1);
                    clearTextFields();
                } else {
                    JOptionPane.showMessageDialog(null, "Operation Failed", "Add Pay", 0);
                }
            }else{
                JOptionPane.showMessageDialog(null, "Invalid Apartment Number", "Invalid Input", 0);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Empty Field Error or Invalid Apartment Number", "Error", 2);
        }
    }//GEN-LAST:event_add_payActionPerformed

    private void update_payActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_update_payActionPerformed
        // TODO add your handling code here:
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        int payId;
        String date = dateFormat.format(txt_date.getDate());
        String amount = txt_amount.getText();
        int aptNum;

        try {
            payId = Integer.parseInt(txt_payId.getText());
            aptNum = Integer.parseInt(txt_apt_number.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Invalid Input for Pay ID or Apartment Number", "Input Error", 0);
            return; // Exit the method if there's an error in parsing numbers
        }

        if (!date.isBlank() && !amount.isBlank()) {
            // All required fields are not blank
            Pay_Class pay = new Pay_Class(payId, date, amount, aptNum);

            if (new Pay_Class().editPay(pay)) {
                JOptionPane.showMessageDialog(null, "Pay Updated Successfully", "Update Pay", 1);
                clearTextFields();
            } else {
                JOptionPane.showMessageDialog(null, "Operation Failed", "Update Pay", 1);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Empty Field Error", "Empty Field", 2);
        }
    }//GEN-LAST:event_update_payActionPerformed

    private void refresh_pay_tableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refresh_pay_tableActionPerformed
        // TODO add your handling code here:
        fillJTableWithPayData();
    }//GEN-LAST:event_refresh_pay_tableActionPerformed

    private void pay_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pay_tableMouseClicked
        // TODO add your handling code here:
        //Fill The Form Field With The Selected Pay Data
        int selectedRowIndex = pay_table.getSelectedRow();
        txt_payId.setText(pay_table.getValueAt(selectedRowIndex, 0).toString());
        // Correctly set the date
        try {
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            Date date = dateFormat.parse(pay_table.getValueAt(selectedRowIndex, 1).toString());
            txt_date.setDate(date);
        } catch (ParseException ex) {
            ex.printStackTrace();
        }
        txt_amount.setText(pay_table.getValueAt(selectedRowIndex, 2).toString());
        txt_apt_number.setText(pay_table.getValueAt(selectedRowIndex, 3).toString());
    }//GEN-LAST:event_pay_tableMouseClicked

    private void apartment_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_apartment_tableMouseClicked
        // TODO add your handling code here:
        //Fill The Apt Number Field and Monthly Rent Field With The Selected Apartment Data
        int selectedRowIndex = apartment_table.getSelectedRow();
        txt_apt_number.setText(apartment_table.getValueAt(selectedRowIndex, 0).toString());
    }//GEN-LAST:event_apartment_tableMouseClicked

    private void refresh_apt_tableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refresh_apt_tableActionPerformed
        // TODO add your handling code here:
        fillJTableWithApartmentData();
    }//GEN-LAST:event_refresh_apt_tableActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Pay_Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Pay_Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Pay_Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Pay_Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Pay_Frame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add_pay;
    private javax.swing.JTable apartment_table;
    private javax.swing.JLabel frame_title3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable pay_table;
    private javax.swing.JButton refresh_apt_table;
    private javax.swing.JButton refresh_pay_table;
    private javax.swing.JTextField txt_amount;
    private javax.swing.JTextField txt_apt_number;
    private com.toedter.calendar.JDateChooser txt_date;
    private javax.swing.JTextField txt_payId;
    private javax.swing.JButton update_pay;
    // End of variables declaration//GEN-END:variables
}
